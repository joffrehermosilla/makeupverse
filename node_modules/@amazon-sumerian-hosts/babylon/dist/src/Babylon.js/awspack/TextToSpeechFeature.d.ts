export default TextToSpeechFeature;
/**
 * @extends core/TextToSpeechFeature
 * @alias babylonjs/TextToSpeechFeature
 */
declare class TextToSpeechFeature {
    /**
     * @constructor
     *
     * @param {babylonjs/HostObject} host - Host object managing the feature.
     * @param {Object=} options - Options that will be sent to Polly for each speech.
     * @param {Scene} options.scene - Babylon scene containing the host owner.
     * @param {Mesh=} options.attachTo - Optional mesh to attach the speech
     * audio to.
     */
    constructor(host: any, options?: any | undefined);
    _scene: any;
    _attachTo: any;
    _setAudioContext(): void;
    _audioContext: any;
    _observeAudioContext(): void;
    _synthesizeAudio(params: any): any;
    _createSpeech(text: any, speechmarks: any, audioConfig: any): Speech;
    getEngineUserAgentString(): any;
}
import Speech from "./Speech";
//# sourceMappingURL=TextToSpeechFeature.d.ts.map